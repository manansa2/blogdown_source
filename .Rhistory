names(w3_comp_sub)
w2w3_wide <- left_join(w2_comp_sub, w3_comp_sub[,c("resp", "ARI")], by = "resp")
View(w2w3_wide)
w2w3_wide <- left_join(w2_comp_sub[, -"wave"], w3_comp_sub[,c("resp", "ARI")], by = "resp")
w2w3_wide <- left_join(w2_comp_sub[, -c("wave")], w3_comp_sub[,c("resp", "ARI")], by = "resp")
View(w2_comp_sub)
w2w3_wide <- left_join(w2_comp_sub[, -13], w3_comp_sub[,c("resp", "ARI")], by = "resp")
names(w2w3_wide)
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(10, 13)) %>% select(., -c("wave.x", "wave.y")) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(10, 13)) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
View(w2w3_long)
str(w2w3_long)
str(indiv_level_w2)
educ_gee <- geeglm(ARI ~ educ_3cat.x + age_sc.x + female.x + race3cat.x + childhh.x + health_bin.x,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
educ_gee <- geeglm(ARI ~ educ_3cat + age_sc + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
## Level 3
w2_comp_sub <- indiv_level_w2[complete.cases(indiv_level_w2),]
w3_comp_sub <- indiv_level_w3[complete.cases(indiv_level_w3),]
w2w3_wide <- left_join(w2_comp_sub[, -13], w3_comp_sub[,c("resp", "ARI")], by = "resp")
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(10, 13)) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
View(w2w3_long)
w2w3_wide <- left_join(w2_comp_sub[, -13], w3_comp_sub[,c("resp", "ARI")], by = "resp")
names(w2w3_wide)
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(10, 14)) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(11, 14)) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
educ_gee <- geeglm(ARI ~ educ_3cat + age_sc + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
educ_gee <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
summary(educ_gee)
educ_gee <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = id, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
educ_gee <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
summary(educ_gee)
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="unstructured", std.err="san.se")
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="unstructured", std.err="san.se")
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="ar1", std.err="san.se")
summary(educ_ind)
summary(educ_uns)
educ_ind <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="independent", std.err="san.se")
educ_ind <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="independent", std.err="san.se")
summary(w2w3_long)
summary(w3_comp_sub)
## Level 3
w2_comp_sub <- indiv_level_w2[complete.cases(indiv_level_w2),]
w3_comp_sub <- indiv_level_w3[complete.cases(indiv_level_w3),]
w2_comp_sub[w2_comp_sub$resp %in% w3_comp_sub$resp,] %>% dim()
w3_comp_sub[w3_comp_sub$resp %in% w2_comp_sub$resp,] %>% dim()
w2w3_wide <- left_join(w2_comp_sub[w2_comp_sub$resp %in% w3_comp_sub$resp, -13], w3_comp_sub[w3_comp_sub$resp %in% w2_comp_sub$resp,c("resp", "ARI")], by = "resp")
w2w3_long <- gather(w2w3_wide, "wave", "ARI", c(11, 14)) %>% mutate(., wave = ifelse(wave == "ARI.x", "2", "3"))
educ_gee <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
summary(educ_gee)
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = hood, waves=wave, family=binomial("logit"), corstr="ar1", std.err="san.se")
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="unstructured", std.err="san.se")
educ_ind <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="independent", std.err="san.se")
educ_gee <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="exch", std.err="san.se")
summary(educ_gee)
educ_uns <- geeglm(ARI ~ educ_3cat + age + female + race3cat + childhh + health_bin + homeownership,
data=w2w3_long, id = resp, waves=wave, family=binomial("logit"), corstr="unstructured", std.err="san.se")
library(data.table)
library(dplyr)
cor <- fread("~/Downloads/M_val_correlation.txt")
correg <- fread("~/Downloads/M_val_cor_reg.txt")
correg <- fread("~/Downloads/M_val_cor_reg.txt", rownames=TRUE)
View(correg)
correg <- fread("~/Downloads/M_val_cor_reg.txt", sep = "\t")
cor <- fread("~/Downloads/M_val_correlation.txt")
View(cor)
View(cor)
cor.vec <- as.vector(cor)
head(cor.vec)
View(cor.vec)
cor.vec <- as.matrix(cor) %>% as.vector()
head(cor.vec)
cor.vec <- as.matrix(cor[, -1]) %>% as.vector()
head(cor.vec)
length(cor.vec)
cor.vec <- arrange(cor.vec)
cor.vec <- sort(cor.vec)
plot(cor.vec, 1:906304)
plot(1:906304, cor.vec)
which(cor > 0.9)
length(which(cor > 0.9))
length(which(cor > 0.99))
length(which(cor > 0.999))
length(which(cor > 0.9 & cor < 0.999))
which(cor > 0.9 & cor < 0.999)
dim(cor)
179422/953
which(cor[188,])
cor[188,1]
which(cor[188,] > .9 & cor[188,] < .999)
cor[188,447]
cor[447,1]
424780/953
which(cor[445,] > .9 & cor[445,] < .999)
which(cor[447,] > .9 & cor[447,] < .999)
which(cor[446,] > .9 & cor[446,] < .999)
cor(446, 189)
cor[446, 189]
815814/953
which(cor[856,] > .9 & cor[856,] < .999)
cor[856, 903]
cor[904, 857]
cor[903, 857]
cor[903, 856]
cor[903, 855]
cor[902, 857]
cor[902, 1]
cor[857, 1]
cor[V1 == "201046290095_R08C01",]
which(cor[V1 == "201046290095_R08C01",])
which(cor$V1 == "201046290095_R08C01")
which(cor$V1 == "200992330056_R05C01")
cor[188, 446]
cor[446, 188]
cor[446, 187]
cor.v2 <- cor[, -1]
dim(cor.v2)
View(cor.v2)
rownames(cor.v2) <- cor[,1]
rownames(cor.v2) <- cor$V10
rownames(cor.v2) <- cor$V1
colnames(cor.v2) <- cor$V1
cor.v3 <- cor.v2 - diag(cor.v2)
dim(diag(cor.v2))
head(diag(cor.v2))
class(cor.v2)
cor.v2 <- as.matrix(cor.v2)
head(diag(cor.v2))
cor.v3 <- cor.v2
cor.v3[cor.v2==1] <- 0
View(cor.v3)
cov.vec <- as.vector(cor.v3)
co4.vec <- as.vector(cor.v3)
cor.vec <- as.vector(cor.v3)
plot(length(cor.vec), sort(cor.vec))
plot(1:length(cor.vec), sort(cor.vec))
cor.v3 <- cor.v2
dim(cor.v2)
I <- diag(952)
cor.v3 <- cor.v2 - I
View(cor.v3)
View(I)
cor.vec <- as.vector(cor.v3)
plot(1:length(cor.vec), sort(cor.vec))
head(sort(cor.vec))
tail(sort(cor.vec))
cor.vec
which(cor.v3 > 0.94)
which(cor.v3 > 0.94, array.ind=TRUE)
which(cor.v3 > 0.94, arr.ind=TRUE)
rownames(cor.v3)[c(446, 188, 902, 856)]
rownames(cor.v2)[c(446, 188, 902, 856)]
head(rownames(cor.v2))
View(cor.v2)
colnames(cor.v2)
colnames(cor.v2)[c(446, 188, 902, 856)]
which(cor.v3 > 0.94, arr.ind=TRUE)
cor.v3[which(cor.v3 > 0.94, arr.ind=TRUE)]
save.image("~/Documents/Simanek_EWAS/Dup_Check.RData")
history()
save.image("~/Documents/Simanek_EWAS/Dup_Check.RData")
load("~/Documents/HMM/HMM.RData")
mat1 <- matrix(c(0.7, 0.3, 0.4, 0.6), nrow = 2, ncol = 2)
View(mat1)
mat1 <- matrix(c(0.7, 0.3, 0.4, 0.6), nrow = 2)
View(mat1)
mat1 <- matrix(c(0.7, 0.3, 0.4, 0.6), nrow = 2, byrow = TRUE)
View(mat1)
mat1 <- matrix(c(0.7, 0.3, 0.4, 0.6), nrow = 2, byrow = FALSE)
View(mat1)
mat1 <- matrix(c(0.7, 0.4, 0.3, 0.6), nrow = 2)
View(mat1)
colnames(mat1) <- c("H", "C")
rownames(mat1) <- c("H", "C")
View(mat1)
mat2 <- matrix(c(0.1, 0.7, 0.4, 0.2, 0.5, 0.1), nrow = 2)
View(mat2)
rownames(mat2) <- c("H", "C")
colnames(mat2) <- c("S", "M", "L")
pi <- matrix(c(0.6, 0.4))
ibrary(HMM)
library(HMM)
?HMM
haps <- matrix(0, nrow=50, ncol=20)
View(haps)
### Simulating bi-allelic SNPs, i.e. 0 = "A allele" 1 = "B allele"
for(i in 1:20){
haps[,i] <- sample(0:1, replace=TRUE, size=50)
}
geno <- matrix(0, nrow=1000, ncol=50)
key <- list()
for(i in 1:1000){
index <- sample(1:20, replace=FALSE, size=2)
key[[i]] <- index
haps.temp <- haps[, index]
geno[i, ] <- apply(haps.temp, 1, sum)
}
View(haps.temp)
View(geno)
colnames(geno) <- paste0("rs", 1:50)
rownames(geno) <- paste0("sampleID_", 1:1000)
View(geno)
af <- apply(geno, 2, sum)/2000
maf <- ifelse(af > 0.5, 1-af, af)
View(af)
View(geno)
set.seed(3456789)
L <- 5000
haps <- matrix(0, nrow=L, ncol=20)
### Simulating bi-allelic SNPs, i.e. 0 = "A allele" 1 = "B allele"
for(i in 1:20){
haps[,i] <- sample(0:1, replace=TRUE, size=50)
}
geno <- matrix(0, nrow=1000, ncol=50)
geno <- matrix(0, nrow=1000, ncol=L)
key <- list()
for(i in 1:1000){
index <- sample(1:20, replace=FALSE, size=2)
key[[i]] <- index
haps.temp <- haps[, index]
geno[i, ] <- apply(haps.temp, 1, sum)
}
colnames(geno) <- paste0("rs", 1:L)
rownames(geno) <- paste0("sampleID_", 1:1000)
af <- apply(geno, 2, sum)/2000
maf <- ifelse(af > 0.5, 1-af, af)
View(geno)
################## Transition Matrix
eps <- 0.000001
theta <- 0.01
H <- 20
L <- 50
# Default in matrix is two crossovers - though least likelihood.
A <- matrix(c(rep((theta/H)^2)),nrow = H^2, ncol = H^2)
View(A)
dim(A)
# Single crossover.
for (i in 1:H) {
for (j in 1:H) {
for (k in 1:H) {
# If the single crossover happens with the second haploid.
A[20*(i-1) + j, 20*(i-1) + k] <- theta/H * (1 - theta) +(theta/H)^2
# If the single crossover happens with the first haploid.
A[20*(j-1) + i, 20*(k-1) + i] <- theta/H * (1 - theta) +(theta/H)^2
}
}
}
# No crossovers
for (i in 1:H^2) {
A[i,i] <- (1-theta)^2 + 2 * theta/H * (1-theta) + (theta/H)^2
}
table(apply(A, 1, sum))
## Original set-up assumes expected genotype and heterozygous
B <- matrix(c(rep(((1-eps)^2+eps^2))),nrow = H^2, ncol = 3)
haps[1, (i+19) %/% 20] + haps[1, 1+(i %% 20)] == 0
haps[1, (i+19) %/% 20]
## This is only for the first allele of 50.
# For homozygous genotype 0
for (i in 1:H^2) {
if ( haps[1, (i+19) %/% 20] + haps[1, 1+(i %% 20)] == 0) {
B[i,1] <- (1-eps)^2
B[i,2] <- eps*(1-eps)
B[i,3] <- eps^2
}
}
View(B)
i <- 33
haps[1, (i+19) %/% 20]
(i+19) %/% 20
which(haps[1,2])
sin(0)
haps[1, (i+19) %/% 20]
haps[1, (i) %/% 20]
View(haps)
dim(haps)
library(data.table)
library(rvest)
library(XML)
library(magrittr)
library(RCurl)
library(stringr)
library(plyr)
library(dplyr)
library(knitr)
library(tidyr)
foo <- tryCatch(read_html("https://county.milwaukee.gov/EN/Medical-Examiner/Public-Data"), error = function(e){'empty page'})
foo <- tryCatch(read_html("https://county.milwaukee.gov/EN/Medical-Examiner/Public-Data"), error = function(e){'empty page'})
View(foo)
View(foo)
library(data.table)
library(dplyr)
library(ggplot2)
father <- fread("Downloads/Father_Empl_CpGsub.txt")
head(father)
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_jitter()
plot(father$pvalue_new, father$pvalue_old)
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point()
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point() + geom_line()
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point(size=1) + geom_smooth()
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point(size=1) + geom_smooth(method = lm)
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point(size=1) + geom_smooth(method = lm) + theme_classic()
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) + geom_point(size=1) + geom_smooth(method = lm, se=FALSE, fullrange=TRUE) + theme_classic()
summary(lm(father$pvalue_old, father$pvalue_new))
summary(lm(father$pvalue_new ~ father$pvalue_old)
)
summary(lm(father$pvalue_new ~ father$pvalue_old))
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
geom_text(x = 25, y = 300, label = lm_eqn(father), parse = TRUE)
lm_eqn <- function(y, x, df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
geom_text(x = 25, y = 300, label = lm_eqn(pvalue_new, pvalue_old, father), parse = TRUE)
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
geom_text(x = 25, y = 300, label = lm_eqn(father$pvalue_new, father$pvalue_old, father), parse = TRUE)
p <- ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw()
p <- ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw()
lm_eqn <- function(y, x, df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father$pvalue_new, father$pvalue_old, father)
lm_eqn <- function(y, x, df){
m <- lm(y ~ x, get(df));
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father$pvalue_new, father$pvalue_old, father)
lm_eqn <- function(y, x, df){
df <- get(df)
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father$pvalue_new, father$pvalue_old, father)
lm_eqn <- function(y, x, df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father$pvalue_new, father$pvalue_old, father)
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father$pvalue_new, father$pvalue_old, father)
lm_eqn(father)
lm_eqn <- function(df){
y <- "father$pvalue_new"
x <- "father$pvalue_old"
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
lm_eqn(father)
y <- "father$pvalue_new"
x <- "father$pvalue_old"
m <- lm(y ~ x, father);
y <- "father$pvalue_new"
y <- father$pvalue_new
x <- father$pvalue_old
m <- lm(y ~ x, father);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
summary(lm(father$pvalue_new ~ father$pvalue_old))
summary(lm(father$pvalue_new ~ father$pvalue_old))$[2,2]
summary(lm(father$pvalue_new ~ father$pvalue_old))$coef[2,2]
summary(lm(father$pvalue_new ~ father$pvalue_old))$coef[3,2]
summary(lm(father$pvalue_new ~ father$pvalue_old))$coef[2,1]
summary(lm(father$pvalue_new ~ father$pvalue_old))$coef[2,4]
plot(father$pvalue_new ~ father$pvalue_old)
abline()
reg <- lm(pvalue_new ~ pvalue_old, data=father)
with(father,plot(pvalue_new,pvalue_old))
abline(reg)
reg <- lm(pvalue_new ~ pvalue_old, data=father)
with(father,plot(pvalue_old,pvalue_new))
abline(reg)
reg <- lm(pvalue_new ~ pvalue_old, data=father)
with(father,plot(pvalue_old,pvalue_new))
abline(reg, col = "red")
reg <- lm(pvalue_new ~ pvalue_old, data=father)
with(father,plot(pvalue_old,pvalue_new, main = "Father's Employment P-values"))
abline(reg, col = "red")
ggplot(data=father, aes(x=pvalue_old, y=pvalue_new)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
labs(title="Father's Employment P-values",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
father$fa_ed <- ln(father$pvalue_old)
father$fa_ed <- log(father$pvalue_old)
father$fa_ed <- -log10(father$pvalue_old)
summary(father$pvalue_old)
summary(father$fa_ed)
father$ma_ed <- -log10(father$pvalue_new)
summary(father$ma_ed)
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
labs(title="Father's Employment P-values",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
summary(lm(father$ma_ed ~ father$fa_ed))
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
labs(title="Father's Employment P-values (y = 0.69360x - 0.01545, p-value: < 2.2e-16",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
theme_bw() +
labs(title="Father's Employment P-values (y = 0.69360x - 0.01545, p-value: < 2.2e-16)",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
# geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
labs(title="Father's Employment P-values (y = 0.69360x - 0.01545, p-value: < 2.2e-16)",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
# geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
labs(title="Father's Employment P-values",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
ggplot(data=father, aes(x=fa_ed, y=ma_ed)) +
geom_point(size=1) +
# geom_smooth(method = lm, se=FALSE, fullrange=TRUE, formula = y ~ x) +
geom_abline(slope=1, intercept=0, col= "blue") +
theme_bw() +
labs(title="Father's Employment P-values",
x ="Father's Edu Adjusted", y = "Mother's Edu Adjusted")
library(data.table)
library(dplyr)
library(ggplot2)
cov <- fread("Downloads/daily.csv")
head(cov)
setwd("/Users/manansa2/Documents/Personal/blog/blogdown_source/")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
